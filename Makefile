NIOS_GO_CLIENT_REPO  	?= ../../unasra/nios-go-client/
CSP_HOST	                 = csp.infoblox.com
SKIP_SCHEMA_VALIDATION		?= false
TERRAFORM_PROVIDER_REPO 	?= ../../unasra/terraform-provider-nios


# Docker image name and Dockerfile path
DOCKER_IMAGE_NAME ?= nios-openapi-generator
DOCKERFILE_PATH ?= docker/Dockerfile

# OpenAPI Generator configuration
CONFIG_DIR ?= openapi-generator-config

# WAPI Version
WAPI_VERSION := v2.12

##==============================================================================
## List of services to generate code for and their respective URLs

SERVICES ?= dns

dns-url               = https://${CSP_HOST}/apidoc/docs/DnsConfig
dns-api               = DNSConfigurationAPI
dns-model-prefix      = wapiv212

##==============================================================================

default: go-client

# Fetch schemas from CSP
.PRECIOUS: .final-schemas/v2.12/%.json
.final-schemas/%.json:
	curl $($*-url) > $@


# ----------------- Go client generation ----------------- #

.PHONY: %-go-client
%-go-client: .final-schemas/${WAPI_VERSION}/%.json go-client/%-config docker-build
	@docker run --rm -v "$(realpath ${NIOS_GO_CLIENT_REPO}):/out" -v "$(shell pwd):/gen"  -w /gen \
	${DOCKER_IMAGE_NAME} \
		java -cp "/opt/bloxone/nios-openapi-generator-1.0.0.jar:/opt/openapi-generator/modules/openapi-generator-cli/target/openapi-generator-cli.jar" org.openapitools.codegen.OpenAPIGenerator \
		generate -g nios-go-client\
		-i $< \
		-o /out/$(subst -,,$*) \
		-c ${CONFIG_DIR}/go-client/generated/$*.yaml \
		--global-property apis,models,supportingFiles=README.md:openapi.yaml:.openapi-generator-ignore:client.go:utils.go \
		--git-user-id unasra \
        --git-repo-id nios-go-client \
		--additional-properties=packageName=$(subst -,,$*) \
		--additional-properties=goImportAlias=$(subst -,,$*) \
		--additional-properties=modelPrefixToRemove=$($*-model-prefix) \
		$(if $(filter true,${SKIP_SCHEMA_VALIDATION}),--skip-validate-spec)

# ----------------- Config generation ----------------- #

# Generate the OpenAPI generator config for the specified service of the client
# The target is of the form <client>/<service>-config
# Example: go-client/ipam-config
.PHONY: %-config
%-config:
	$(eval CLIENT := $(word 1,$(subst /, ,$*)))
	$(eval SERVICE := $(word 2,$(subst /, ,$*)))
	$(eval CLIENT_CONFIG_DIR := ${CONFIG_DIR}/${CLIENT})
	$(eval GENERATED_CONFIG_FILE := ${CONFIG_DIR}/${CLIENT}/generated/${SERVICE}.yaml)

	mkdir -p ${CLIENT_CONFIG_DIR}/generated
	@echo "# Generated by Makefile" > ${GENERATED_CONFIG_FILE}
	@echo "# Do not modify this file manually" >> ${GENERATED_CONFIG_FILE}
	@echo "# To add custom mappings, use ${CLIENT_CONFIG_DIR}/${SERVICE}.override.yaml" >> ${GENERATED_CONFIG_FILE}
	@echo "additionalProperties:" >> ${GENERATED_CONFIG_FILE}
	yq eval-all -i '. as $$item ireduce ({}; . *+ $$item)' ${GENERATED_CONFIG_FILE} ${CLIENT_CONFIG_DIR}/common.yaml
	@if [ -f ${CLIENT_CONFIG_DIR}/${SERVICE}.override.yaml ]; then \
		echo "Applying custom mappings for $*";\
		yq eval-all -i '. as $$item ireduce ({}; . *+ $$item)' ${GENERATED_CONFIG_FILE} ${CLIENT_CONFIG_DIR}/${SERVICE}.override.yaml;\
	fi

# ----------------- Docker -----------------

.PHONY: docker-build
docker-build:
	docker build -t $(DOCKER_IMAGE_NAME) -f $(DOCKERFILE_PATH) .

#----------------- Terraform provider generation ----------------- #

.PHONY: %-terraform
%-terraform: .final-schemas/${WAPI_VERSION}/%.json docker-build
	mkdir -p ${TERRAFORM_PROVIDER_REPO}/internal/service/$(subst -,,$*)
	-cp -n ${CONFIG_DIR}/terraform/.openapi-generator-ignore ${TERRAFORM_PROVIDER_REPO}/internal/service/$(subst -,,$*)/.openapi-generator-ignore
	@docker run --rm -v "$(realpath ${TERRAFORM_PROVIDER_REPO}):/out" -v "$(shell pwd):/gen"  -w /gen \
	-e GO_POST_PROCESS_FILE="/gen/${CONFIG_DIR}/terraform/go-post-process.sh" \
	${DOCKER_IMAGE_NAME} \
		java -cp "/opt/bloxone/nios-openapi-generator-1.0.0.jar:/opt/openapi-generator/modules/openapi-generator-cli/target/openapi-generator-cli.jar" org.openapitools.codegen.OpenAPIGenerator \
		generate -g terraform-provider-nios \
		-i $< \
		--enable-post-process-file \
		-o /out/internal/service/$(subst -,,$*) \
		-c ${CONFIG_DIR}/terraform/config.yaml \
		--git-user-id unasra \
		--git-repo-id terraform-provider-nios \
		--global-property models,modelTests=false,modelDocs=false,apis,apiDocs=false \
		--additional-properties=packageName=$(subst -,,$*) \
		--additional-properties=clientAPI=$($*-api) \
		--additional-properties=modelPrefixToRemove=$($*-model-prefix) \
		$(if $(filter true,${SKIP_SCHEMA_VALIDATION}),--skip-validate-spec)

.PHONY: terraform
terraform:
	$(foreach service,$(SERVICES),$(MAKE) $(service)-terraform;)